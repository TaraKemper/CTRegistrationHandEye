exec(open("C:/d/OverlayPoints.py").read())

3D points = 
 [[-251 -252 -236 -248 -234 -234 -241 -255 -238 -242 -232 -230 -229 -235
  -222 -227 -223 -220 -240 -237 -245 -222 -216 -243 -222 -222 -212 -250
  -237 -238 -210 -215 -214 -216 -221 -226 -218 -221 -217]
 [-208 -211 -214 -205 -219 -205 -209 -181 -189 -194 -200 -203 -207 -190
  -223 -198 -215 -220 -181 -183 -174 -203 -213 -172 -199 -197 -210 -197
  -168 -175 -203 -209 -208 -194 -195 -179 -182 -193 -189]
 [ 254  254  254  255  255  256  256  257  257  257  257  257  257  258
   258  259  259  259  260  260  261  261  261  263  263  264  264  265
   266  266  266  267  268  270  271  274  278  278  279]] 

2D points = 
 [[ 828.5  895.5 1005.5  784.5 1138.5  873.   895.5  231.5  519.5  585.5
   762.5  850.5  917.5  541.5 1271.5  762.5 1094.5 1249.   342.5  408.5
   187.5  895.5 1138.5  165.5  806.5  762.5 1094.5  607.5   99.   231.5
   939.5 1050.  1005.5  740.5  740.5  386.5  475.   696.5  629.5]
 [ 926.5  967.5  682.   865.5  682.   600.5  763.5  906.5  580.5  682.
   519.   498.5  519.   519.   519.   417.5  458.   458.   560.   519.
   641.5  356.   315.5  621.   315.5  315.5  234.   865.5  458.   519.
   152.5  274.5  254.5  172.5  254.5  274.5  132.   234.   152.5]] 

intrinsic matrix = 
 [[412.90843425   0.         828.36534349]
 [  0.         421.32892474 789.7670365 ]
 [  0.           0.           1.        ]] 

extrinsic matrix = 
 [[-3.15658959e-01  9.28359312e-01  1.96235597e-01  6.39241822e+01]
 [ 8.43356392e-01  2.00664839e-01  4.98481313e-01  1.17915113e+02]
 [ 4.23459999e-01  3.22898347e-01 -8.46414961e-01  3.62258087e+02]
 [ 0.00000000e+00  0.00000000e+00  0.00000000e+00  1.00000000e+00]] 

projection matrix = 
 [[ 2.20441341e+02  6.50805190e+02 -6.20113487e+02  3.26476879e+05]
 [ 6.89765190e+02  3.39560372e+02 -4.58446040e+02  3.35780544e+05]
 [ 4.23459999e-01  3.22898347e-01 -8.46414961e-01  3.62258087e+02]] 

fre = 
 48.42439524262555 

2D Reprojection Errors (pixels) = 
 [[  6.50932333]
 [ 34.82639619]
 [ 61.72691689]
 [ 17.96942231]
 [ 54.62516075]
 [ 38.80471297]
 [ 20.39385673]
 [ 87.47990146]
 [ 40.60294217]
 [ 53.24106259]
 [ 39.27566293]
 [ 31.75937102]
 [ 36.4399709 ]
 [ 21.96874467]
 [ 26.06606956]
 [ 20.22810989]
 [ 23.72477952]
 [ 32.42811607]
 [ 43.80587411]
 [ 55.5541504 ]
 [ 46.51848777]
 [ 30.91404289]
 [ 41.21740944]
 [ 69.80943322]
 [ 20.66649904]
 [ 35.41742533]
 [ 85.68871801]
 [ 95.72271706]
 [122.28966133]
 [ 36.5088799 ]
 [158.90824883]
 [ 40.34201354]
 [ 19.54321867]
 [ 34.61040076]
 [ 47.97016696]
 [ 34.95551916]
 [ 47.98635941]
 [ 99.05384009]
 [ 72.99782863]] 

 Average 2D Reprojection Errors (pixels) = 
 48.424395242625636 


renWin = vtk.vtkRenderWindow()
renWin.SetSize(1349,1080)
renWin.Render()
renWin.Render()

renWin = vtk.vtkRenderWindow()
renWin.SetSize(675,540)
renWin.Render()
renWin.Render()


renWin = vtk.vtkRenderWindow()
renWin.SetSize(899,720)
renWin.Render()
renWin.Render()


brain = getNode('Model_1_1')
tumor = getNode('Model_2_2')
CT = getNode('CT_idx_small')
whole_brain = getNode('whole_brain_label')

ext = extrinsic * -1
ext_vtk = vtk.vtkMatrix4x4()
ext_vtk.DeepCopy((ext[0, 0], ext[0, 1], ext[0, 2], ext[0, 3], ext[1, 0], ext[1, 1], ext[1, 2], ext[1, 3], ext[2, 0], ext[2, 1], ext[2, 2], ext[2, 3], 0, 0, 0, 1))

brain.ApplyTransformMatrix(ext_vtk)
tumor.ApplyTransformMatrix(ext_vtk)
CT.ApplyTransformMatrix(ext_vtk)
whole_brain.ApplyTransformMatrix(ext_vtk)




extInv = np.linalg.inv(extrinsic) * -1
extInv_vtk = vtk.vtkMatrix4x4()
extInv_vtk.DeepCopy((extInv[0, 0], extInv[0, 1], extInv[0, 2], extInv[0, 3], extInv[1, 0], extInv[1, 1], extInv[1, 2], extInv[1, 3], extInv[2, 0], extInv[2, 1], extInv[2, 2], extInv[2, 3], 0, 0, 0, 1))


brain.ApplyTransformMatrix(extInv_vtk)
tumor.ApplyTransformMatrix(extInv_vtk)